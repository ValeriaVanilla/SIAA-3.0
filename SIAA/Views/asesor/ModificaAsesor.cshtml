
@model SIAA.asesor

@{
    Layout = null;
}

<h2><b>MODIFICACIÓN DE ASESORES</b></h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.IdAsesor)


        <div class="form-group">
            <p class="control-label col-md-2"><b>NUMERO DE EMPLEADO</b></p>
            <div class="col-md-10">
                @Html.DisplayFor(model => model.IdAsesor)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.usuario.Nombre, Html.DisplayNameFor(model => model.usuario.Nombre).ToString().ToUpper(), htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.usuario.Nombre, new { htmlAttributes = new { @class = "form-control", pattern = "[^0-9]*", title = "No se permiten números en este campo" } })
                @Html.ValidationMessageFor(model => model.usuario.Nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <p class="control-label col-md-2"><b>APELLIDO PATERNO</b></p>
            <div class="col-md-10">
                @Html.EditorFor(model => model.usuario.ApellidoPaterno, new { htmlAttributes = new { @class = "form-control", pattern = "[^0-9]*", title = "No se permiten números en este campo" } })
                @Html.ValidationMessageFor(model => model.usuario.ApellidoPaterno, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <p class="control-label col-md-2"><b>APELLIDO MATERNO</b></p>
            <div class="col-md-10">
                @Html.EditorFor(model => model.usuario.ApellidoMaterno, new { htmlAttributes = new { @class = "form-control", pattern = "[^0-9]*", title = "No se permiten números en este campo" } })
                @Html.ValidationMessageFor(model => model.usuario.ApellidoMaterno, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <p class="control-label col-md-2"><b>CORREO</b></p>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Correo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Correo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <p class="control-label col-md-2"><b>PROGRAMA EDUCATIVO</b></p>
            <div class="col-md-10">
                @Html.DropDownList("IdProgramaEducativo", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.usuario.IdProgramaEducativo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.usuario.IdEstatus, Html.DisplayNameFor(model => model.usuario.IdEstatus).ToString().ToUpper(), htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IdEstatus", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.usuario.IdEstatus, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Guardar" class="btn btn-default" />
        </div>
    </div>

}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}